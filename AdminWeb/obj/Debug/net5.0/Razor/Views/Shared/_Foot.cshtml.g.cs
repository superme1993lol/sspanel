#pragma checksum "F:\code\ssp\codeforgithub\code\SsNewPanel\AdminWeb\Views\Shared\_Foot.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "11062f1345c11c1d27a04fce08b9b9e22faa4b84"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Shared__Foot), @"mvc.1.0.view", @"/Views/Shared/_Foot.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "F:\code\ssp\codeforgithub\code\SsNewPanel\AdminWeb\Views\_ViewImports.cshtml"
using AdminWeb;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "F:\code\ssp\codeforgithub\code\SsNewPanel\AdminWeb\Views\_ViewImports.cshtml"
using AdminWeb.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"11062f1345c11c1d27a04fce08b9b9e22faa4b84", @"/Views/Shared/_Foot.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"04d7dea00641b8026593b581abb279f7bf04476b", @"/Views/_ViewImports.cshtml")]
    public class Views_Shared__Foot : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(" \r\n");
            WriteLiteral(@"<link href=""/lib/bootstrap/dist/css/bootstrap-grid.css"" rel=""stylesheet"" />
<script src=""/lib/jquery/dist/jquery.js""></script>

<script src=""/lib/bootstrap/dist/js/bootstrap.js""></script>
<script src=""/lib/layer/layer.js"" charset=""utf-8""></script>

<script src=""/js/jquery.cookie.js""></script>


<script type=""text/javascript"" src=""https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.0/moment.min.js""></script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/tempusdominus-bootstrap-4/5.39.0/js/tempusdominus-bootstrap-4.min.js"" ></script>
<link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/tempusdominus-bootstrap-4/5.39.0/css/tempusdominus-bootstrap-4.min.css""     />
<script>

    function tMsg(msg, callback) {

        if ($(""#talert"").length > 0) {
            $(""#talertinfo"").html(msg);
        }
        else {
            $(""body"").append('<div class=""alert alert-warning"" style=""position:absolute;top:0px;width:100%;display:none;z-index:10000;"" role=""alert"" id=""talert"">");
            WriteLiteral(@"<span id=""talertinfo"">' + msg + '</span><button type=""button"" class=""close"" data-dismiss=""alert"" aria-label=""Close""><span aria-hidden=""true"">&times;</span></button></div>');
        }
        $(""#talert"").hide().fadeIn(1000);
        setTimeout(function () {
            $(""#talert"").fadeOut(1000);
            if (callback) {
                callback();
            }
        }, 3000);
    }
    function tAlert(obj, callback) {
        var title = ""提示"";
        var content = """";
        var btn = ""确定"";
        if (obj) {
            if (obj.title) title = obj.title;
            if (obj.btn) btn = obj.btn;
            if (obj.content) content = obj.content;
            else content = obj;
            layer.open({
                title: title,
                btn: [btn],
                content: content,
                yes: function (index) {
                    layer.close(index);
                },
                end: function () {
                    if (callback) {
              ");
            WriteLiteral(@"          callback();
                    }
                }
            });;
        }
    }
    function tPost(url, formdata, successCallback, errorCallback, loading) {
        var loadIndex = 0;
        if (loading == true) {
            loadIndex = layer.load(1, {
                shade: [0.1, '#fff']
            });
        }
        $.ajax({
            type: 'POST',
            url: url,
            data: formdata,
            dataType: 'json',
            success: function (data) {
                if (loading == true) {
                    layer.close(loadIndex);
                }
                if (data.rt == true) {
                    if (successCallback) {
                        successCallback(data.msg);
                    }
                }
                else {
                    if (errorCallback) {
                        errorCallback(data.msg);
                    }
                    else {
                        if (data.msg) {
                    ");
            WriteLiteral(@"        tAlert(data.msg);
                        }
                        else {
                            tAlert(""服务器正忙！"");
                        }
                    }
                }

            },
            error: function (error) {
                if (loading == true) {
                    layer.close(loadIndex);
                }
                if (errorCallback) {
                    errorCallback();
                }
            }
        });
    }


    function tGet(url, successCallback, errorCallback, loading) {
        var loadIndex = 0;
        if (loading == true) {
            loadIndex = layer.load(1, {
                shade: [0.1, '#fff']
            });
        }

        $.ajax({
            type: 'GET',
            url: url,
            dataType: 'json',
            success: function (data) {
                if (loading == true) {
                    layer.close(loadIndex);
                }
                if (data.rt == true) {
         ");
            WriteLiteral(@"           if (successCallback) {
                        successCallback(data.msg);
                    }
                }
                else {
                    if (errorCallback) {
                        errorCallback(data.msg);
                    }
                    else {
                        if (data.msg) {
                            tAlert(data.msg);
                        }
                        else {
                            tAlert(""服务器正忙！"");
                        }
                    }
                }

            },
            error: function (error) {
                if (loading == true) {
                    layer.close(loadIndex);
                }
                if (errorCallback) {
                    errorCallback();
                }
            }
        });
    } 
    function tConfirm(title, successCallback, failCallback) {
        layer.confirm(title, {
            btn: ['确认', '取消']  
        }, function (index) {
            if");
            WriteLiteral(@" (successCallback) successCallback();
            layer.close(index);
        }, function () {
            if (failCallback) failCallback();
        });
    }

    $(function () {
        var msg = getUrlParam('msg');
        if (msg && msg != null) {
            setTimeout(function () {
                tMsg(msg);
            }, 500);
        }
        var alertinfo = getUrlParam('alert');
        if (alertinfo && alertinfo != null) {
            setTimeout(function () {
                tAlert(alertinfo);
            }, 500);
        }
    });
    function getUrlParam(name) {
        var reg = new RegExp(""(^|&)"" + name + ""=([^&]*)(&|$)"");  
        var r = decodeURI(window.location.search).substr(1).match(reg);  
        if (r != null) return unescape(r[2]); return null;  
    }
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
